[user]
	name = TJ Taylor
	email = dugancathal@gmail.com
	signingkey = 35DA3202
[push]
	default = current
[core]
	excludesfile = /Users/tjtjrb/.gitignore
	editor = vim

# DO NOT EDIT BELOW THIS LINE

[push]
  default = tracking
[color]
  branch = auto
  diff = auto
  status = auto
[format]
  pretty = %Cblue%h%Creset %Cgreen[%ar]%Creset (%an) %s
[alias]
  aa = add --all
  am = commit --amend
  ap = add --patch
  ci = commit -v
  cane = commit --no-e --am
  co = checkout
  br = branch
  recon = rebase --continue
  pbr = push -u origin HEAD
  pbrfl = push -u origin HEAD --force-with-lease
  create-branch = !sh -c 'git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git remote prune origin && git branch -D $1' -
  merge-branch = !git checkout master && git merge @{-1} --ff-only
  psuh = push
  rebase-origin = !git fetch origin && git rebase origin/master
  stale-locals = !git for-each-ref --format '%(refname:short) %(upstream:track)'  | grep '\\[gone\\]' | awk '{print $1}'
  fom = fetch origin main
  cofm = "!f() { git fom && git co -b $1 origin/main; git br --unset-upstream $1; }; f"
  from = !git fom && git rebase --autosquash -i origin/main
  st = status
  s = status
  ctags = !.git/hooks/ctags
  llog = log --date=local
  lgs = !git -P log -n10 --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  flog = log --pretty=fuller --decorate
  latest-branches = br --sort=-committerdate
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  lol = log --graph --decorate --oneline
  lola = log --graph --decorate --oneline --all
  copy-pr-url = !gh pr view --json url | jq -r .url | pbcopy
  merge-prod = "!${HOME}/.bin/merge-prod.sh"
  wip = "!f() { git add . && git commit -m \"[skip ci] WIP: $@\" -n --allow-empty; }; f"
  unwip = !git --no-pager log --pretty=oneline -n 1 && git reset HEAD~
  recent = "!recent() { \
        git for-each-ref \
                refs/heads/ \
                --sort=-committerdate \
                --color \
                --format='%(HEAD) %(objectname:short)|%(refname:short)|%(committerdate:relative)' \
        | column -ts'|' \
        | head -n ${1:-10}; \
  }; recent"
  cbc = "!cbc() { for commit in $(git log --format='%h' origin/main..); do git show $commit; done }; cbc"
[init]
	defaultBranch = main
[diff]
	tool = opendiff
[merge]
	tool = opendiff
	ff = only
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
